<!--
 - Copyright 1999-2011 Alibaba Group.
 -  
 - Licensed under the Apache License, Version 2.0 (the "License");
 - you may not use this file except in compliance with the License.
 - You may obtain a copy of the License at
 -  
 -      http://www.apache.org/licenses/LICENSE-2.0
 -  
 - Unless required by applicable law or agreed to in writing, software
 - distributed under the License is distributed on an "AS IS" BASIS,
 - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 - See the License for the specific language governing permissions and
 - limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="location" value="classpath:dubbo.properties" />
    </bean>
	


	<bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="${redis.maxActive}"/>
		<property name="maxIdle" value="${redis.maxIdle}"/>
		<property name="testOnBorrow" value="true"/>
		<property name="testOnReturn" value="true"/>
		<property name="testWhileIdle" value="true"/>
	</bean>

	<bean id="redisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
		<constructor-arg index="0" ref="redisPoolConfig"/>
		<constructor-arg index="1" value="${redis.host}"/>
		<constructor-arg index="2" value="${redis.port}"/>
		<constructor-arg index="3" value="${redis.timeout}"/>
		<constructor-arg index="4" value="${redis.password}"/>
		<constructor-arg index="5" value="${redis.database}"/>
	</bean>

	<bean id="redisTemplate" class="com.alibaba.dubbo.monitor.simple.redis.RedisTemplate">
		<property name="pool" ref="redisPool"/>
	</bean>

	<bean id="monitorService" class="com.alibaba.dubbo.monitor.simple.SimpleMonitorService">
		<property name="statisticsDirectory" value="${dubbo.statistics.directory}" />
		<property name="chartsDirectory" value="${dubbo.charts.directory}" />
		<property name="redisTemplate" ref="redisTemplate"/>
		<property name="writeRedis" value="${isWriteRedis}"/>
	</bean>

	
	<dubbo:application name="${dubbo.application.name}" owner="${dubbo.application.owner}" />
	
	<dubbo:registry address="${dubbo.registry.address}" />
	
	<dubbo:protocol name="dubbo" port="${dubbo.protocol.port}" />
	
	<dubbo:service interface="com.alibaba.dubbo.monitor.MonitorService" ref="monitorService" delay="-1" />
	
	<dubbo:reference id="registryService" interface="com.alibaba.dubbo.registry.RegistryService" />
	
</beans>